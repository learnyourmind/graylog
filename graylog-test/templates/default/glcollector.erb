// Graylog Collector example configuration.

// URL to REST API of Graylog server this collector registers at
server-url = "http://<%= @glserver %>:12900"

// Enable registration with the Graylog server. (enabled by default)
//enable-registration = true

// The id used to identify this collector. Can be either a string which is used as id,
// or the location of a file if prefixed with "file:". If the file does not exist,
// an id will be generated and written to that file. If it exists, it is expected
// to contain a single string without spaces which will be used for the id.
// Defaults to "file:config/collector-id" if not specified.
collector-id = "file:/etc/graylog/collector/collector-id"

inputs {
  // A simple file input that follows /var/log/syslog.
  local-<%= @securename %> {
    type = "file"
    path = "<%= @securepath %>"
    charset = "utf-8"
    content-splitter = "newline"
  }
  local-<%= @messagesname %> {
    type = "file"
    path = "<%= @messagespath %>"
    charset = "utf-8"
    content-splitter = "newline"
  }
  local-<%= @bootname %> {
    type = "file"
    path = "<%= @bootpath %>"
    charset = "utf-8"
    content-splitter = "newline"
  }
  local-<%= @cronname %> {
    type = "file"
    path = "<%= @cronpath %>"
    charset = "utf-8"
    content-splitter = "newline"
  }
  local-<%= @mailname %> {
    type = "file"
    path = "<%= @mailpath %>"
    charset = "utf-8"
    content-splitter = "newline"
  }
  local-<%= @yumname %> {
    type = "file"
    path = "<%= @yumpath %>"
    charset = "utf-8"
    content-splitter = "newline"
  }
  local-<%= @lastname %> {
    type = "file"
    path = "<%= @lastpath %>"
    charset = "utf-8"
    content-splitter = "newline"
  }

}

outputs {
// GELF output to send messages to a Graylog server. Usually only type, host and port are needed.
// The other options are for TLS support and to fine-tune the GELF client library.
  gelf-tcp {
    type = "gelf"
    host = "<%= @glserver %>"
    port = <%= @listenport %>
    client-tls = false
  }
}

